---
kind: pipeline
type: kubernetes
name: default

steps:
  - name: restore-m2-cache
    image: plugins/s3-cache
    pull: if-not-exists
    failure: ignore
    settings:
      pull: true
      path: cache
      filename: project-books-m2.tar
      endpoint: http://s3-minio.gitlab.svc.cluster.local:9000
      workdir: m2
      access_key:
        from_secret: S3AccessKey
      secret_key:
        from_secret: S3SecretKey
      restore: true

  - name: build
    image: maven:3.8.6-openjdk-18
    environment:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_CERTDIR: ""
      TESTCONTAINERS_HOST_OVERRIDE: "localhost"
      TESTCONTAINERS_RYUK_DISABLED: true
    pull: if-not-exists
    commands:
#      - mvn clean install -DskipTests -Ddependency-check.skip=true -Dmaven.repo.local=m2 #fast build for debug
      - mvn clean verify -Dmaven.repo.local=m2
    volumes:
      - name: dockersock
        path: /var/run

  - name: rebuild-m2-cache
    image: plugins/s3-cache
    pull: if-not-exists
    failure: ignore
    settings:
      rebuild: true
      path: cache
      filename: project-books-m2.tar
      endpoint: http://s3-minio.gitlab.svc.cluster.local:9000
      workdir: m2
      mount: m2
      access_key:
        from_secret: S3AccessKey
      secret_key:
        from_secret: S3SecretKey

  - name: build-image
    image: docker:dind
    pull: if-not-exists
    environment:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_CERTDIR: ""
      TESTCONTAINERS_HOST_OVERRIDE: "localhost"
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    commands:
      - cd library
      - docker image build -f Dockerfile -t registry-http.registry.svc.cluster.local/library:${CI_COMMIT_SHA} .
      - docker push registry-http.registry.svc.cluster.local/library:${CI_COMMIT_SHA}
    volumes:
      - name: dockersock
        path: /var/run

  - name: deploy
    image: bitnami/kubectl:1.24
    pull: if-not-exists
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    environment:
      K8S_TOKEN:
        from_secret: k8sToken
    commands:
      - kubectl config set-cluster "k8s.mikhailov.net" --server=https://192.168.0.5:6443  --insecure-skip-tls-verify
      - kubectl config set-credentials user --token=$K8S_TOKEN
      - kubectl config set-context "local" --cluster="k8s.mikhailov.net" --user="user"
      - kubectl config use-context "local"
      - kubectl config set-context --current --namespace=library
      - kubectl set image deployment/library library=registry-http.registry.svc.cluster.local/library:${CI_COMMIT_SHA}

services:
  - name: docker-service
    image: docker:dind
    entrypoint:
      - dockerd --registry-mirror http://registry-mirror-http.registry.svc.cluster.local --insecure-registry registry-http.registry.svc.cluster.local -H tcp://0.0.0.0:2375 --tls=false
    privileged: true

trigger:
  event:
    exclude:
      - promote

---
kind: pipeline
type: kubernetes
name: deploy

steps:
  - name: deploy
    image: bitnami/kubectl:1.24
    pull: if-not-exists
    when:
      branch:
        - master
    environment:
      K8S_TOKEN:
        from_secret: k8sToken
    commands:
      - kubectl config set-cluster "k8s.mikhailov.net" --server=https://192.168.0.5:6443  --insecure-skip-tls-verify
      - kubectl config set-credentials user --token=$K8S_TOKEN
      - kubectl config set-context "local" --cluster="k8s.mikhailov.net" --user="user"
      - kubectl config use-context "local"
      - kubectl config set-context --current --namespace=library
      - kubectl set image deployment/library library=registry-http.registry.svc.cluster.local/library:${CI_COMMIT_SHA}

trigger:
  event:
    - promote
  target:
    - production
